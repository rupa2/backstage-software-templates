name: ${{values.app_name}}-cicd

on:
  push:
    paths: 
      - src/**
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ '${{ secrets.DOCKERHUB_USERNAME }}' }}
          password: ${{ '${{ secrets.DOCKERHUB_TOKEN }}' }}
      - 
        name: Get Hash
        shell: bash
        run: |
         echo "COMMIT_ID=${GITHUB_SHA::6}" >> "$GITHUB_ENV"

      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: devir2/${{values.app_name}}:${{ '${{ env.COMMIT_ID }}' }}
    outputs:
      commit_id: ${{ '${{ env.COMMIT_ID }}' }}
  cd:
    runs-on: self-hosted
    needs: ci
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: modify value file
        shell: bash
        run: |
         echo ${{needs.ci.outputs.commit_id}}
         pip install yq
         yq -Yi '.image.tag = "${{'${{needs.ci.outputs.commit_id}}' }}"' charts/${{values.app_name}}/values-${{values.app_env}}.yaml
      
      - 
        name: commit changes
        uses: EndBug/add-and-commit@v9
        with:
           message: 'updated values file with commit ${{needs.ci.outputs.commit_id}}'

      -
        name: install argocd
        shell: bash
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd

      - name: argocd login
        shell: bash
        run: |
          argocd login argocd-server.argocd \
            --insecure  \
            --grpc-web \
            --username admin \
            --password  ${{ '${{ secrets.ARGOCD_PASSWORD }}' }}

      - name: Ensure argocd repo and app
        shell: bash
        run: |

          # Connects the argocd repo
          repo="https://github.com/rupa-2/${{values.app_name}}.git"
          argocd repo list | grep -q $repo || argocd repo add $repo

          # Creates the argocd app
          argocd app get ${{values.app_name}} || argocd app create ${{values.app_name}} \
            --repo $repo \
            --path charts/${{values.app_name}} \
            --dest-namespace ${{values.app_env}} \
            --dest-server https://kubernetes.default.svc \
            --values values-${{values.app_env}}.yaml \
            --revision main \
            --sync-policy manual \
            --sync-option CreateNamespace=true

      - name: Argocd app sync
        shell: bash
        run: |
          argocd app sync ${{values.app_name}}
          argocd app wait ${{values.app_name}} --timeout 180

         


